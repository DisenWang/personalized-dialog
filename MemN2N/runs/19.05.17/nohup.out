/home/cil/anaconda3/envs/deep-learning/lib/python3.5/re.py:203: FutureWarning: split() requires a non-empty pattern match.
  return _compile(pattern, flags).split(string, maxsplit)
Started Task: 4
Candidate Size 43863
vocab size: 14636
Longest sentence length 11
Longest candidate sentence length 13
Longest story length 19
Average story length 15
Training Size 21042
Validation Size 21174
Epoch 1
Epoch 2
Epoch 3
Epoch 4
Epoch 5
Epoch 6
Epoch 7
Epoch 8
Epoch 9
Epoch 10
-----------------------
Epoch 10
Total Cost: 17944.3750234
Training Accuracy: 0.868406045053
Validation Accuracy: 0.566732785492
-----------------------
Epoch 11
Epoch 12
Epoch 13
Epoch 14
Epoch 15
Epoch 16
Epoch 17
Epoch 18
Epoch 19
Epoch 20
-----------------------
Epoch 20
Total Cost: 1592.35124788
Training Accuracy: 0.990257580078
Validation Accuracy: 0.566732785492
-----------------------
Epoch 21
Epoch 22
Epoch 23
Epoch 24
Epoch 25
Epoch 26
Epoch 27
Epoch 28
Epoch 29
Epoch 30
-----------------------
Epoch 30
Total Cost: 379.36542207
Training Accuracy: 0.995437696036
Validation Accuracy: 0.566732785492
-----------------------
Epoch 31
Epoch 32
Epoch 33
Epoch 34
Epoch 35
Epoch 36
Epoch 37
Epoch 38
Epoch 39
Epoch 40
-----------------------
Epoch 40
Total Cost: 2527.01422285
Training Accuracy: 0.998669328011
Validation Accuracy: 0.566732785492
-----------------------
Epoch 41
Epoch 42
Epoch 43
Epoch 44
Epoch 45
Epoch 46
Epoch 47
Epoch 48
Epoch 49
Epoch 50
-----------------------
Epoch 50
Total Cost: 32.6128036065
Training Accuracy: 0.999382188005
Validation Accuracy: 0.566732785492
-----------------------
Epoch 51
Epoch 52
Epoch 53
Epoch 54
Epoch 55
Epoch 56
Epoch 57
Epoch 58
Epoch 59
Epoch 60
-----------------------
Epoch 60
Total Cost: 315.997535584
Training Accuracy: 0.999619808003
Validation Accuracy: 0.566732785492
-----------------------
Epoch 61
Epoch 62
Epoch 63
Epoch 64
Epoch 65
Epoch 66
Epoch 67
Epoch 68
Epoch 69
Epoch 70
-----------------------
Epoch 70
Total Cost: 167.122720183
Training Accuracy: 0.999239616006
Validation Accuracy: 0.566732785492
-----------------------
Epoch 71
Epoch 72
Epoch 73
Epoch 74
Epoch 75
Epoch 76
Epoch 77
Epoch 78
Epoch 79
Epoch 80
-----------------------
Epoch 80
Total Cost: 388.868105375
Training Accuracy: 0.999667332003
Validation Accuracy: 0.566732785492
-----------------------
Epoch 81
Epoch 82
Epoch 83
Epoch 84
Epoch 85
Epoch 86
Epoch 87
Epoch 88
Epoch 89
Epoch 90
-----------------------
Epoch 90
Total Cost: 12.0674295574
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
Epoch 91
Epoch 92
Epoch 93
Epoch 94
Epoch 95
Epoch 96
Epoch 97
Epoch 98
Epoch 99
Epoch 100
-----------------------
Epoch 100
Total Cost: 14.6476694312
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
Epoch 101
Epoch 102
Epoch 103
Epoch 104
Epoch 105
Epoch 106
Epoch 107
Epoch 108
Epoch 109
Epoch 110
-----------------------
Epoch 110
Total Cost: 77.6880920709
Training Accuracy: 0.999904952001
Validation Accuracy: 0.566732785492
-----------------------
Epoch 111
Epoch 112
Epoch 113
Epoch 114
Epoch 115
Epoch 116
Epoch 117
Epoch 118
Epoch 119
Epoch 120
-----------------------
Epoch 120
Total Cost: 0.366595413042
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
Epoch 121
Epoch 122
Epoch 123
Epoch 124
Epoch 125
Epoch 126
Epoch 127
Epoch 128
Epoch 129
Epoch 130
-----------------------
Epoch 130
Total Cost: 0.00288843495309
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
Epoch 131
Epoch 132
Epoch 133
Epoch 134
Epoch 135
Epoch 136
Epoch 137
Epoch 138
Epoch 139
Epoch 140
-----------------------
Epoch 140
Total Cost: 0.040351203239
Training Accuracy: 0.999952476
Validation Accuracy: 0.566732785492
-----------------------
Epoch 141
Epoch 142
Epoch 143
Epoch 144
Epoch 145
Epoch 146
Epoch 147
Epoch 148
Epoch 149
Epoch 150
-----------------------
Epoch 150
Total Cost: 0.0148235897172
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
Epoch 151
Epoch 152
Epoch 153
Epoch 154
Epoch 155
Epoch 156
Epoch 157
Epoch 158
Epoch 159
Epoch 160
-----------------------
Epoch 160
Total Cost: 0.00207066139092
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
Epoch 161
Epoch 162
Epoch 163
Epoch 164
Epoch 165
Epoch 166
Epoch 167
Epoch 168
Epoch 169
Epoch 170
-----------------------
Epoch 170
Total Cost: 0.027610771226
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
Epoch 171
Epoch 172
Epoch 173
Epoch 174
Epoch 175
Epoch 176
Epoch 177
Epoch 178
Epoch 179
Epoch 180
-----------------------
Epoch 180
Total Cost: 577.24848704
Training Accuracy: 0.998669328011
Validation Accuracy: 0.566732785492
-----------------------
Epoch 181
Epoch 182
Epoch 183
Epoch 184
Epoch 185
Epoch 186
Epoch 187
Epoch 188
Epoch 189
Epoch 190
-----------------------
Epoch 190
Total Cost: 156.147811759
Training Accuracy: 0.999952476
Validation Accuracy: 0.566732785492
-----------------------
Epoch 191
Epoch 192
Epoch 193
Epoch 194
Epoch 195
Epoch 196
Epoch 197
Epoch 198
Epoch 199
Epoch 200
-----------------------
Epoch 200
Total Cost: 0.00383240870417
Training Accuracy: 1.0
Validation Accuracy: 0.566732785492
-----------------------
/home/cil/anaconda3/envs/deep-learning/lib/python3.5/re.py:203: FutureWarning: split() requires a non-empty pattern match.
  return _compile(pattern, flags).split(string, maxsplit)
Started Task: 4
Candidate Size 43863
vocab size: 14636
Longest sentence length 11
Longest candidate sentence length 13
Longest story length 19
Average story length 15
Testing Size 20988
Testing Accuracy: 0.571755288736
/home/cil/anaconda3/envs/deep-learning/lib/python3.5/re.py:203: FutureWarning: split() requires a non-empty pattern match.
  return _compile(pattern, flags).split(string, maxsplit)
Started Task: 4
Candidate Size 43863
vocab size: 14651
Longest sentence length 11
Longest candidate sentence length 13
Longest story length 19
Average story length 15
Traceback (most recent call last):
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1021, in _do_call
    return fn(*args)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1003, in _run_fn
    status, run_metadata)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py", line 469, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [14651,20] rhs shape= [14636,20]
	 [[Node: save/Assign = Assign[T=DT_FLOAT, _class=["loc:@MemN2N/A"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](MemN2N/A, save/RestoreV2)]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "single_dialog.py", line 219, in <module>
    chatbot.test()
  File "single_dialog.py", line 184, in test
    self.saver.restore(self.sess, ckpt.model_checkpoint_path)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1388, in restore
    {self.saver_def.filename_tensor_name: save_path})
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 766, in run
    run_metadata_ptr)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 964, in _run
    feed_dict_string, options, run_metadata)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1014, in _do_run
    target_list, options, run_metadata)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1034, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [14651,20] rhs shape= [14636,20]
	 [[Node: save/Assign = Assign[T=DT_FLOAT, _class=["loc:@MemN2N/A"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](MemN2N/A, save/RestoreV2)]]

Caused by op 'save/Assign', defined at:
  File "single_dialog.py", line 214, in <module>
    chatbot=chatBot(FLAGS.data_dir,model_dir,FLAGS.task_id,OOV=FLAGS.OOV,isInteractive=FLAGS.interactive,batch_size=FLAGS.batch_size)
  File "single_dialog.py", line 67, in __init__
    self.saver = tf.train.Saver(max_to_keep=50)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1000, in __init__
    self.build()
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1030, in build
    restore_sequentially=self._restore_sequentially)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 624, in build
    restore_sequentially, reshape)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 373, in _AddRestoreOps
    assign_ops.append(saveable.restore(tensors, shapes))
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 130, in restore
    self.op.get_shape().is_fully_defined())
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/ops/gen_state_ops.py", line 47, in assign
    use_locking=use_locking, name=name)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 759, in apply_op
    op_def=op_def)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 2240, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/home/cil/anaconda3/envs/deep-learning/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1128, in __init__
    self._traceback = _extract_stack()

InvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [14651,20] rhs shape= [14636,20]
	 [[Node: save/Assign = Assign[T=DT_FLOAT, _class=["loc:@MemN2N/A"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](MemN2N/A, save/RestoreV2)]]

